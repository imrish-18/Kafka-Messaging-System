spring:
  application:
    name: order-service
  data:
    mongodb:
      uri: mongodb://localhost:27017/orders_db
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring.json.type.mapping: com.rishabh.order.dto.OrderEvent

app:
  kafka:
    topic:
      order-events: order-events

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
      register-with-eureka: true
      fetch-registry: true
resilience4j:
  circuitbreaker:
    instances:
      userServiceCB:
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
      productServiceCB:
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
      paymentServiceCB:
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
      inventoryServiceCB:
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      userServiceCB:
        timeoutDuration: 3s
      productServiceCB:
        timeoutDuration: 3s


